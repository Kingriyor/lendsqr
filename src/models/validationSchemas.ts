import Joi from 'joi';

export const createUserSchema = Joi.object({
  name: Joi.string().min(3).max(30).required(),
  email: Joi.string().email().required(),
  // password: Joi.string().min(6).required(),
});

export const updateUserSchema = Joi.object({
  // id: Joi.number().optional(),
  name: Joi.string().optional(),
  phone_number: Joi.string().optional(),
  // phone_number_hash: Joi.string().optional(),
  // email: Joi.string().email().optional(),
  bvn: Joi.string().optional(),
  bvn_phone_number: Joi.string().optional(),
  date_of_birth: Joi.string().optional(),
  age: Joi.number().optional(),
  gender: Joi.string().optional(),
  stage_id: Joi.number().optional(),
  stage: Joi.string().optional(),
  photo_url: Joi.string().uri().optional(),
  mifos_client_id: Joi.string().optional(),
  client_id: Joi.string().optional(),
  savings_id: Joi.string().optional(),
  account_number: Joi.string().optional(),
  account_balance: Joi.number().optional(),
  account_name: Joi.string().optional(),
  referral_code: Joi.string().optional(),
  referred_by: Joi.string().optional().allow(null),
  referrer_name: Joi.string().optional().allow(null),
  referrer_email: Joi.string().email().optional().allow(null),
  referrer_phone: Joi.string().optional().allow(null),
  referrer_code: Joi.string().optional().allow(null),
  device_id: Joi.string().optional(),
  notification_token: Joi.string().optional(),
  device_type: Joi.string().optional(),
  tier_id: Joi.number().optional(),
  tier: Joi.string().optional(),
  withdrawal_limit: Joi.number().optional(),
  deposit_limit: Joi.number().optional(),
  borrower_max_cumulative_amount: Joi.number().optional(),
  support_email: Joi.string().email().optional(),
  loan_count: Joi.number().optional(),
  savings_plans: Joi.number().optional(),
  savings_target: Joi.number().optional(),
  savings_balance: Joi.number().optional(),
  activated: Joi.number().optional(),
  activated_on: Joi.string().optional(),
  blacklisted: Joi.number().optional(),
  reason: Joi.string().optional().allow(null),
  selfie_bvn_check: Joi.string().optional(),
  selfie_id_check: Joi.string().optional(),
  last_login_date: Joi.string().optional(),
  created_on: Joi.string().optional(),
  modified_on: Joi.string().optional(),
  deleted_on: Joi.string().optional().allow(null),
  nok_first_name: Joi.string().optional(),
  nok_last_name: Joi.string().optional(),
  nok_phone_number: Joi.string().optional(),
  nok_email: Joi.string().email().optional(),
  nok_address: Joi.string().optional(),
  nok_relationship: Joi.string().optional(),
  marital_status: Joi.string().optional(),
  no_of_dependent: Joi.string().optional(),
  type_of_residence: Joi.string().optional(),
  educational_attainment: Joi.string().optional(),
  employment_status: Joi.string().optional(),
  sector_of_employment: Joi.string().optional(),
  current_employer: Joi.string().optional(),
  employment_category: Joi.string().optional(),
  monthly_net_income: Joi.string().optional(),
  work_start_date: Joi.string().optional(),
  work_email: Joi.string().email().optional(),
  country: Joi.string().optional(),
  city: Joi.string().optional(),
  lga: Joi.string().optional(),
  street: Joi.string().optional().allow(null),
  nearest_landmark: Joi.string().optional(),
  longitude: Joi.number().optional(),
  latitude: Joi.number().optional(),
  address: Joi.string().optional(),
  process_time: Joi.string().optional(),
  created_at: Joi.date().optional(),
  updated_at: Joi.date().optional(),
})
.or(
  'name', 'phone_number', 'bvn', 'bvn_phone_number', 'date_of_birth', 'age',
  'gender', 'stage_id', 'stage', 'photo_url', 'mifos_client_id', 'client_id', 'savings_id', 'account_number',
  'account_balance', 'account_name', 'referral_code', 'referred_by', 'referrer_name', 'referrer_email', 
  'referrer_phone', 'referrer_code', 'device_id', 'notification_token', 'device_type', 'tier_id', 'tier', 
  'withdrawal_limit', 'deposit_limit', 'borrower_max_cumulative_amount', 'support_email', 'loan_count',
  'savings_plans', 'savings_target', 'savings_balance', 'activated', 'activated_on', 'blacklisted', 'reason',
  'selfie_bvn_check', 'selfie_id_check', 'last_login_date', 'created_on', 'modified_on', 'deleted_on',
  'nok_first_name', 'nok_last_name', 'nok_phone_number', 'nok_email', 'nok_address', 'nok_relationship',
  'marital_status', 'no_of_dependent', 'type_of_residence', 'educational_attainment', 'employment_status',
  'sector_of_employment', 'current_employer', 'employment_category', 'monthly_net_income', 'work_start_date',
  'work_email', 'country', 'city', 'lga', 'street', 'nearest_landmark', 'longitude', 'latitude', 'address',
  'process_time', 'created_at', 'updated_at'
)
.messages({
  'object.missing': 'At least one field must be provided for update',
});


export const fundWithdrawAccountSchema = Joi.object({
  userId: Joi.number().integer().positive().required(),
  amount: Joi.number().positive().required(),
});

export const transferFundsSchema = Joi.object({
  senderUserId: Joi.number().integer().positive().required(),
  receiverUserId: Joi.number().integer().positive().required(),
  amount: Joi.number().positive().required(),
});